# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: CMake with prebuilt artifacts

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  # Explicitly use GCC to avoid MSVC-specific issues
  CC: gcc
  CXX: g++

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4

    - name: Setup MSYS2 (Windows)
      if: runner.os == 'Windows'
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        install: |
          mingw-w64-x86_64-gcc
          mingw-w64-x86_64-cmake
          mingw-w64-x86_64-make
        path-type: inherit

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_C_COMPILER=${{env.CC}} -DCMAKE_CXX_COMPILER=${{env.CXX}} ${{ runner.os == 'Windows' && '-G "MinGW Makefiles"' || '' }}
      shell: ${{ runner.os == 'Windows' && 'msys2 {0}' || 'bash' }}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
      shell: ${{ runner.os == 'Windows' && 'msys2 {0}' || 'bash' }}

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{env.BUILD_TYPE}}
      shell: ${{ runner.os == 'Windows' && 'msys2 {0}' || 'bash' }}

    - name: Upload Linux artifact
      if: runner.os == 'Linux'
      uses: actions/upload-artifact@v4
      with:
        name: bfvmcpp-linux
        path: build/bfvmcpp

    - name: Upload Windows artifact
      if: runner.os == 'Windows'
      uses: actions/upload-artifact@v4
      with:
        name: bfvmcpp-windows
        path: build/${{ env.BUILD_TYPE }}/bfvmcpp.exe

